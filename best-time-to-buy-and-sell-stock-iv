class Solution {
    public int maxProfit(int k, int[] prices) {
        int n = prices.length;
        int[][] next = new int[2][k + 1];
        
        for (int i = n - 1; i >= 0; i--){
            int[][] curr = new int[2][k + 1];
            for (int j = 1; j >= 0; j--){
                for (int trans = k; trans >= 1; trans--){
                    int skip = next[j][trans];

                    if (j == 1) curr[j][trans] = Math.max(skip, next[0][trans] - prices[i]);
                    else curr[j][trans] = Math.max(skip, next[1][trans - 1] + prices[i]);
                }
            }
            next = curr;
        }

        return next[1][k];
    }
}
